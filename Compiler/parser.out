Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> LBRACE decls stmts RBRACE
Rule 2     decls -> decl
Rule 3     decls -> decls SEMICOLON decl
Rule 4     decl -> ids COLON type
Rule 5     ids -> IDENTIFIER
Rule 6     ids -> ids COMMA IDENTIFIER
Rule 7     type -> INT
Rule 8     type -> REAL
Rule 9     type -> BOOLEAN
Rule 10    stmts -> stmt
Rule 11    stmts -> stmts SEMICOLON stmt
Rule 12    stmt -> IF expr THEN stmt ELSE stmt
Rule 13    stmt -> WHILE expr DO stmt
Rule 14    stmt -> FOR IDENTIFIER ASSIGN expr TO expr DO stmts
Rule 15    stmt -> READ LPAREN ids RPAREN
Rule 16    stmt -> WRITELN LPAREN expr RPAREN
Rule 17    stmt -> WRITELN LPAREN ids RPAREN
Rule 18    stmt -> IDENTIFIER ASSIGN expr
Rule 19    expr -> expr EQUAL expr
Rule 20    expr -> expr NEQUAL expr
Rule 21    expr -> expr LT expr
Rule 22    expr -> expr GT expr
Rule 23    expr -> expr LE expr
Rule 24    expr -> expr GE expr
Rule 25    expr -> expr PLUS expr
Rule 26    expr -> expr MINUS expr
Rule 27    expr -> expr TIMES expr
Rule 28    expr -> expr DIVIDE expr
Rule 29    expr -> expr OR expr
Rule 30    expr -> expr AND expr
Rule 31    expr -> NOT expr
Rule 32    expr -> LPAREN expr RPAREN
Rule 33    expr -> IDENTIFIER
Rule 34    expr -> NUMBER
Rule 35    expr -> TRUE
Rule 36    expr -> FALSE

Terminals, with rules where they appear

AND                  : 30
ASSIGN               : 14 18
BOOLEAN              : 9
COLON                : 4
COMMA                : 6
DIVIDE               : 28
DO                   : 13 14
ELSE                 : 12
EQUAL                : 19
FALSE                : 36
FOR                  : 14
GE                   : 24
GT                   : 22
IDENTIFIER           : 5 6 14 18 33
IF                   : 12
INT                  : 7
LBRACE               : 1
LE                   : 23
LPAREN               : 15 16 17 32
LT                   : 21
MINUS                : 26
NEQUAL               : 20
NOT                  : 31
NUMBER               : 34
OR                   : 29
PLUS                 : 25
RBRACE               : 1
READ                 : 15
REAL                 : 8
RPAREN               : 15 16 17 32
SEMICOLON            : 3 11
THEN                 : 12
TIMES                : 27
TO                   : 14
TRUE                 : 35
WHILE                : 13
WRITELN              : 16 17
error                : 

Nonterminals, with rules where they appear

decl                 : 2 3
decls                : 1 3
expr                 : 12 13 14 14 16 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 32
ids                  : 4 6 15 17
program              : 0
stmt                 : 10 11 12 12 13
stmts                : 1 11 14
type                 : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . LBRACE decls stmts RBRACE

    LBRACE          shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> LBRACE . decls stmts RBRACE
    (2) decls -> . decl
    (3) decls -> . decls SEMICOLON decl
    (4) decl -> . ids COLON type
    (5) ids -> . IDENTIFIER
    (6) ids -> . ids COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 6

    decls                          shift and go to state 3
    decl                           shift and go to state 4
    ids                            shift and go to state 5

state 3

    (1) program -> LBRACE decls . stmts RBRACE
    (3) decls -> decls . SEMICOLON decl
    (10) stmts -> . stmt
    (11) stmts -> . stmts SEMICOLON stmt
    (12) stmt -> . IF expr THEN stmt ELSE stmt
    (13) stmt -> . WHILE expr DO stmt
    (14) stmt -> . FOR IDENTIFIER ASSIGN expr TO expr DO stmts
    (15) stmt -> . READ LPAREN ids RPAREN
    (16) stmt -> . WRITELN LPAREN expr RPAREN
    (17) stmt -> . WRITELN LPAREN ids RPAREN
    (18) stmt -> . IDENTIFIER ASSIGN expr

    SEMICOLON       shift and go to state 8
    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    READ            shift and go to state 14
    WRITELN         shift and go to state 15
    IDENTIFIER      shift and go to state 13

    stmts                          shift and go to state 7
    stmt                           shift and go to state 9

state 4

    (2) decls -> decl .

    SEMICOLON       reduce using rule 2 (decls -> decl .)
    IF              reduce using rule 2 (decls -> decl .)
    WHILE           reduce using rule 2 (decls -> decl .)
    FOR             reduce using rule 2 (decls -> decl .)
    READ            reduce using rule 2 (decls -> decl .)
    WRITELN         reduce using rule 2 (decls -> decl .)
    IDENTIFIER      reduce using rule 2 (decls -> decl .)


state 5

    (4) decl -> ids . COLON type
    (6) ids -> ids . COMMA IDENTIFIER

    COLON           shift and go to state 16
    COMMA           shift and go to state 17


state 6

    (5) ids -> IDENTIFIER .

    COLON           reduce using rule 5 (ids -> IDENTIFIER .)
    COMMA           reduce using rule 5 (ids -> IDENTIFIER .)
    RPAREN          reduce using rule 5 (ids -> IDENTIFIER .)


state 7

    (1) program -> LBRACE decls stmts . RBRACE
    (11) stmts -> stmts . SEMICOLON stmt

    RBRACE          shift and go to state 18
    SEMICOLON       shift and go to state 19


state 8

    (3) decls -> decls SEMICOLON . decl
    (4) decl -> . ids COLON type
    (5) ids -> . IDENTIFIER
    (6) ids -> . ids COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 6

    decl                           shift and go to state 20
    ids                            shift and go to state 5

state 9

    (10) stmts -> stmt .

    RBRACE          reduce using rule 10 (stmts -> stmt .)
    SEMICOLON       reduce using rule 10 (stmts -> stmt .)
    ELSE            reduce using rule 10 (stmts -> stmt .)


state 10

    (12) stmt -> IF . expr THEN stmt ELSE stmt
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 21

state 11

    (13) stmt -> WHILE . expr DO stmt
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 28

state 12

    (14) stmt -> FOR . IDENTIFIER ASSIGN expr TO expr DO stmts

    IDENTIFIER      shift and go to state 29


state 13

    (18) stmt -> IDENTIFIER . ASSIGN expr

    ASSIGN          shift and go to state 30


state 14

    (15) stmt -> READ . LPAREN ids RPAREN

    LPAREN          shift and go to state 31


state 15

    (16) stmt -> WRITELN . LPAREN expr RPAREN
    (17) stmt -> WRITELN . LPAREN ids RPAREN

    LPAREN          shift and go to state 32


state 16

    (4) decl -> ids COLON . type
    (7) type -> . INT
    (8) type -> . REAL
    (9) type -> . BOOLEAN

    INT             shift and go to state 34
    REAL            shift and go to state 35
    BOOLEAN         shift and go to state 36

    type                           shift and go to state 33

state 17

    (6) ids -> ids COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 37


state 18

    (1) program -> LBRACE decls stmts RBRACE .

    $end            reduce using rule 1 (program -> LBRACE decls stmts RBRACE .)


state 19

    (11) stmts -> stmts SEMICOLON . stmt
    (12) stmt -> . IF expr THEN stmt ELSE stmt
    (13) stmt -> . WHILE expr DO stmt
    (14) stmt -> . FOR IDENTIFIER ASSIGN expr TO expr DO stmts
    (15) stmt -> . READ LPAREN ids RPAREN
    (16) stmt -> . WRITELN LPAREN expr RPAREN
    (17) stmt -> . WRITELN LPAREN ids RPAREN
    (18) stmt -> . IDENTIFIER ASSIGN expr

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    READ            shift and go to state 14
    WRITELN         shift and go to state 15
    IDENTIFIER      shift and go to state 13

    stmt                           shift and go to state 38

state 20

    (3) decls -> decls SEMICOLON decl .

    SEMICOLON       reduce using rule 3 (decls -> decls SEMICOLON decl .)
    IF              reduce using rule 3 (decls -> decls SEMICOLON decl .)
    WHILE           reduce using rule 3 (decls -> decls SEMICOLON decl .)
    FOR             reduce using rule 3 (decls -> decls SEMICOLON decl .)
    READ            reduce using rule 3 (decls -> decls SEMICOLON decl .)
    WRITELN         reduce using rule 3 (decls -> decls SEMICOLON decl .)
    IDENTIFIER      reduce using rule 3 (decls -> decls SEMICOLON decl .)


state 21

    (12) stmt -> IF expr . THEN stmt ELSE stmt
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

    THEN            shift and go to state 39
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51


state 22

    (31) expr -> NOT . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 52

state 23

    (32) expr -> LPAREN . expr RPAREN
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 53

state 24

    (33) expr -> IDENTIFIER .

    THEN            reduce using rule 33 (expr -> IDENTIFIER .)
    EQUAL           reduce using rule 33 (expr -> IDENTIFIER .)
    NEQUAL          reduce using rule 33 (expr -> IDENTIFIER .)
    LT              reduce using rule 33 (expr -> IDENTIFIER .)
    GT              reduce using rule 33 (expr -> IDENTIFIER .)
    LE              reduce using rule 33 (expr -> IDENTIFIER .)
    GE              reduce using rule 33 (expr -> IDENTIFIER .)
    PLUS            reduce using rule 33 (expr -> IDENTIFIER .)
    MINUS           reduce using rule 33 (expr -> IDENTIFIER .)
    TIMES           reduce using rule 33 (expr -> IDENTIFIER .)
    DIVIDE          reduce using rule 33 (expr -> IDENTIFIER .)
    OR              reduce using rule 33 (expr -> IDENTIFIER .)
    AND             reduce using rule 33 (expr -> IDENTIFIER .)
    DO              reduce using rule 33 (expr -> IDENTIFIER .)
    RPAREN          reduce using rule 33 (expr -> IDENTIFIER .)
    RBRACE          reduce using rule 33 (expr -> IDENTIFIER .)
    SEMICOLON       reduce using rule 33 (expr -> IDENTIFIER .)
    ELSE            reduce using rule 33 (expr -> IDENTIFIER .)
    TO              reduce using rule 33 (expr -> IDENTIFIER .)


state 25

    (34) expr -> NUMBER .

    THEN            reduce using rule 34 (expr -> NUMBER .)
    EQUAL           reduce using rule 34 (expr -> NUMBER .)
    NEQUAL          reduce using rule 34 (expr -> NUMBER .)
    LT              reduce using rule 34 (expr -> NUMBER .)
    GT              reduce using rule 34 (expr -> NUMBER .)
    LE              reduce using rule 34 (expr -> NUMBER .)
    GE              reduce using rule 34 (expr -> NUMBER .)
    PLUS            reduce using rule 34 (expr -> NUMBER .)
    MINUS           reduce using rule 34 (expr -> NUMBER .)
    TIMES           reduce using rule 34 (expr -> NUMBER .)
    DIVIDE          reduce using rule 34 (expr -> NUMBER .)
    OR              reduce using rule 34 (expr -> NUMBER .)
    AND             reduce using rule 34 (expr -> NUMBER .)
    DO              reduce using rule 34 (expr -> NUMBER .)
    RPAREN          reduce using rule 34 (expr -> NUMBER .)
    RBRACE          reduce using rule 34 (expr -> NUMBER .)
    SEMICOLON       reduce using rule 34 (expr -> NUMBER .)
    ELSE            reduce using rule 34 (expr -> NUMBER .)
    TO              reduce using rule 34 (expr -> NUMBER .)


state 26

    (35) expr -> TRUE .

    THEN            reduce using rule 35 (expr -> TRUE .)
    EQUAL           reduce using rule 35 (expr -> TRUE .)
    NEQUAL          reduce using rule 35 (expr -> TRUE .)
    LT              reduce using rule 35 (expr -> TRUE .)
    GT              reduce using rule 35 (expr -> TRUE .)
    LE              reduce using rule 35 (expr -> TRUE .)
    GE              reduce using rule 35 (expr -> TRUE .)
    PLUS            reduce using rule 35 (expr -> TRUE .)
    MINUS           reduce using rule 35 (expr -> TRUE .)
    TIMES           reduce using rule 35 (expr -> TRUE .)
    DIVIDE          reduce using rule 35 (expr -> TRUE .)
    OR              reduce using rule 35 (expr -> TRUE .)
    AND             reduce using rule 35 (expr -> TRUE .)
    DO              reduce using rule 35 (expr -> TRUE .)
    RPAREN          reduce using rule 35 (expr -> TRUE .)
    RBRACE          reduce using rule 35 (expr -> TRUE .)
    SEMICOLON       reduce using rule 35 (expr -> TRUE .)
    ELSE            reduce using rule 35 (expr -> TRUE .)
    TO              reduce using rule 35 (expr -> TRUE .)


state 27

    (36) expr -> FALSE .

    THEN            reduce using rule 36 (expr -> FALSE .)
    EQUAL           reduce using rule 36 (expr -> FALSE .)
    NEQUAL          reduce using rule 36 (expr -> FALSE .)
    LT              reduce using rule 36 (expr -> FALSE .)
    GT              reduce using rule 36 (expr -> FALSE .)
    LE              reduce using rule 36 (expr -> FALSE .)
    GE              reduce using rule 36 (expr -> FALSE .)
    PLUS            reduce using rule 36 (expr -> FALSE .)
    MINUS           reduce using rule 36 (expr -> FALSE .)
    TIMES           reduce using rule 36 (expr -> FALSE .)
    DIVIDE          reduce using rule 36 (expr -> FALSE .)
    OR              reduce using rule 36 (expr -> FALSE .)
    AND             reduce using rule 36 (expr -> FALSE .)
    DO              reduce using rule 36 (expr -> FALSE .)
    RPAREN          reduce using rule 36 (expr -> FALSE .)
    RBRACE          reduce using rule 36 (expr -> FALSE .)
    SEMICOLON       reduce using rule 36 (expr -> FALSE .)
    ELSE            reduce using rule 36 (expr -> FALSE .)
    TO              reduce using rule 36 (expr -> FALSE .)


state 28

    (13) stmt -> WHILE expr . DO stmt
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

    DO              shift and go to state 54
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51


state 29

    (14) stmt -> FOR IDENTIFIER . ASSIGN expr TO expr DO stmts

    ASSIGN          shift and go to state 55


state 30

    (18) stmt -> IDENTIFIER ASSIGN . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 56

state 31

    (15) stmt -> READ LPAREN . ids RPAREN
    (5) ids -> . IDENTIFIER
    (6) ids -> . ids COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 6

    ids                            shift and go to state 57

state 32

    (16) stmt -> WRITELN LPAREN . expr RPAREN
    (17) stmt -> WRITELN LPAREN . ids RPAREN
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE
    (5) ids -> . IDENTIFIER
    (6) ids -> . ids COMMA IDENTIFIER

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 60
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 58
    ids                            shift and go to state 59

state 33

    (4) decl -> ids COLON type .

    SEMICOLON       reduce using rule 4 (decl -> ids COLON type .)
    IF              reduce using rule 4 (decl -> ids COLON type .)
    WHILE           reduce using rule 4 (decl -> ids COLON type .)
    FOR             reduce using rule 4 (decl -> ids COLON type .)
    READ            reduce using rule 4 (decl -> ids COLON type .)
    WRITELN         reduce using rule 4 (decl -> ids COLON type .)
    IDENTIFIER      reduce using rule 4 (decl -> ids COLON type .)


state 34

    (7) type -> INT .

    SEMICOLON       reduce using rule 7 (type -> INT .)
    IF              reduce using rule 7 (type -> INT .)
    WHILE           reduce using rule 7 (type -> INT .)
    FOR             reduce using rule 7 (type -> INT .)
    READ            reduce using rule 7 (type -> INT .)
    WRITELN         reduce using rule 7 (type -> INT .)
    IDENTIFIER      reduce using rule 7 (type -> INT .)


state 35

    (8) type -> REAL .

    SEMICOLON       reduce using rule 8 (type -> REAL .)
    IF              reduce using rule 8 (type -> REAL .)
    WHILE           reduce using rule 8 (type -> REAL .)
    FOR             reduce using rule 8 (type -> REAL .)
    READ            reduce using rule 8 (type -> REAL .)
    WRITELN         reduce using rule 8 (type -> REAL .)
    IDENTIFIER      reduce using rule 8 (type -> REAL .)


state 36

    (9) type -> BOOLEAN .

    SEMICOLON       reduce using rule 9 (type -> BOOLEAN .)
    IF              reduce using rule 9 (type -> BOOLEAN .)
    WHILE           reduce using rule 9 (type -> BOOLEAN .)
    FOR             reduce using rule 9 (type -> BOOLEAN .)
    READ            reduce using rule 9 (type -> BOOLEAN .)
    WRITELN         reduce using rule 9 (type -> BOOLEAN .)
    IDENTIFIER      reduce using rule 9 (type -> BOOLEAN .)


state 37

    (6) ids -> ids COMMA IDENTIFIER .

    COLON           reduce using rule 6 (ids -> ids COMMA IDENTIFIER .)
    COMMA           reduce using rule 6 (ids -> ids COMMA IDENTIFIER .)
    RPAREN          reduce using rule 6 (ids -> ids COMMA IDENTIFIER .)


state 38

    (11) stmts -> stmts SEMICOLON stmt .

    RBRACE          reduce using rule 11 (stmts -> stmts SEMICOLON stmt .)
    SEMICOLON       reduce using rule 11 (stmts -> stmts SEMICOLON stmt .)
    ELSE            reduce using rule 11 (stmts -> stmts SEMICOLON stmt .)


state 39

    (12) stmt -> IF expr THEN . stmt ELSE stmt
    (12) stmt -> . IF expr THEN stmt ELSE stmt
    (13) stmt -> . WHILE expr DO stmt
    (14) stmt -> . FOR IDENTIFIER ASSIGN expr TO expr DO stmts
    (15) stmt -> . READ LPAREN ids RPAREN
    (16) stmt -> . WRITELN LPAREN expr RPAREN
    (17) stmt -> . WRITELN LPAREN ids RPAREN
    (18) stmt -> . IDENTIFIER ASSIGN expr

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    READ            shift and go to state 14
    WRITELN         shift and go to state 15
    IDENTIFIER      shift and go to state 13

    stmt                           shift and go to state 61

state 40

    (19) expr -> expr EQUAL . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 62

state 41

    (20) expr -> expr NEQUAL . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 63

state 42

    (21) expr -> expr LT . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 64

state 43

    (22) expr -> expr GT . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 65

state 44

    (23) expr -> expr LE . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 66

state 45

    (24) expr -> expr GE . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 67

state 46

    (25) expr -> expr PLUS . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 68

state 47

    (26) expr -> expr MINUS . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 69

state 48

    (27) expr -> expr TIMES . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 70

state 49

    (28) expr -> expr DIVIDE . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 71

state 50

    (29) expr -> expr OR . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 72

state 51

    (30) expr -> expr AND . expr
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 73

state 52

    (31) expr -> NOT expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 31 (expr -> NOT expr .)
    DO              reduce using rule 31 (expr -> NOT expr .)
    RPAREN          reduce using rule 31 (expr -> NOT expr .)
    RBRACE          reduce using rule 31 (expr -> NOT expr .)
    SEMICOLON       reduce using rule 31 (expr -> NOT expr .)
    ELSE            reduce using rule 31 (expr -> NOT expr .)
    TO              reduce using rule 31 (expr -> NOT expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 31 (expr -> NOT expr .) ]
  ! NEQUAL          [ reduce using rule 31 (expr -> NOT expr .) ]
  ! LT              [ reduce using rule 31 (expr -> NOT expr .) ]
  ! GT              [ reduce using rule 31 (expr -> NOT expr .) ]
  ! LE              [ reduce using rule 31 (expr -> NOT expr .) ]
  ! GE              [ reduce using rule 31 (expr -> NOT expr .) ]
  ! PLUS            [ reduce using rule 31 (expr -> NOT expr .) ]
  ! MINUS           [ reduce using rule 31 (expr -> NOT expr .) ]
  ! TIMES           [ reduce using rule 31 (expr -> NOT expr .) ]
  ! DIVIDE          [ reduce using rule 31 (expr -> NOT expr .) ]
  ! OR              [ reduce using rule 31 (expr -> NOT expr .) ]
  ! AND             [ reduce using rule 31 (expr -> NOT expr .) ]


state 53

    (32) expr -> LPAREN expr . RPAREN
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

    RPAREN          shift and go to state 74
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51


state 54

    (13) stmt -> WHILE expr DO . stmt
    (12) stmt -> . IF expr THEN stmt ELSE stmt
    (13) stmt -> . WHILE expr DO stmt
    (14) stmt -> . FOR IDENTIFIER ASSIGN expr TO expr DO stmts
    (15) stmt -> . READ LPAREN ids RPAREN
    (16) stmt -> . WRITELN LPAREN expr RPAREN
    (17) stmt -> . WRITELN LPAREN ids RPAREN
    (18) stmt -> . IDENTIFIER ASSIGN expr

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    READ            shift and go to state 14
    WRITELN         shift and go to state 15
    IDENTIFIER      shift and go to state 13

    stmt                           shift and go to state 75

state 55

    (14) stmt -> FOR IDENTIFIER ASSIGN . expr TO expr DO stmts
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 76

state 56

    (18) stmt -> IDENTIFIER ASSIGN expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

    RBRACE          reduce using rule 18 (stmt -> IDENTIFIER ASSIGN expr .)
    SEMICOLON       reduce using rule 18 (stmt -> IDENTIFIER ASSIGN expr .)
    ELSE            reduce using rule 18 (stmt -> IDENTIFIER ASSIGN expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51


state 57

    (15) stmt -> READ LPAREN ids . RPAREN
    (6) ids -> ids . COMMA IDENTIFIER

    RPAREN          shift and go to state 77
    COMMA           shift and go to state 17


state 58

    (16) stmt -> WRITELN LPAREN expr . RPAREN
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

    RPAREN          shift and go to state 78
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51


state 59

    (17) stmt -> WRITELN LPAREN ids . RPAREN
    (6) ids -> ids . COMMA IDENTIFIER

    RPAREN          shift and go to state 79
    COMMA           shift and go to state 17


state 60

    (33) expr -> IDENTIFIER .
    (5) ids -> IDENTIFIER .

  ! reduce/reduce conflict for RPAREN resolved using rule 5 (ids -> IDENTIFIER .)
    EQUAL           reduce using rule 33 (expr -> IDENTIFIER .)
    NEQUAL          reduce using rule 33 (expr -> IDENTIFIER .)
    LT              reduce using rule 33 (expr -> IDENTIFIER .)
    GT              reduce using rule 33 (expr -> IDENTIFIER .)
    LE              reduce using rule 33 (expr -> IDENTIFIER .)
    GE              reduce using rule 33 (expr -> IDENTIFIER .)
    PLUS            reduce using rule 33 (expr -> IDENTIFIER .)
    MINUS           reduce using rule 33 (expr -> IDENTIFIER .)
    TIMES           reduce using rule 33 (expr -> IDENTIFIER .)
    DIVIDE          reduce using rule 33 (expr -> IDENTIFIER .)
    OR              reduce using rule 33 (expr -> IDENTIFIER .)
    AND             reduce using rule 33 (expr -> IDENTIFIER .)
    RPAREN          reduce using rule 5 (ids -> IDENTIFIER .)
    COMMA           reduce using rule 5 (ids -> IDENTIFIER .)

  ! RPAREN          [ reduce using rule 33 (expr -> IDENTIFIER .) ]


state 61

    (12) stmt -> IF expr THEN stmt . ELSE stmt

    ELSE            shift and go to state 80


state 62

    (19) expr -> expr EQUAL expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 19 (expr -> expr EQUAL expr .)
    DO              reduce using rule 19 (expr -> expr EQUAL expr .)
    RPAREN          reduce using rule 19 (expr -> expr EQUAL expr .)
    RBRACE          reduce using rule 19 (expr -> expr EQUAL expr .)
    SEMICOLON       reduce using rule 19 (expr -> expr EQUAL expr .)
    ELSE            reduce using rule 19 (expr -> expr EQUAL expr .)
    TO              reduce using rule 19 (expr -> expr EQUAL expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! NEQUAL          [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! LT              [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! GT              [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! LE              [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! GE              [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! PLUS            [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! MINUS           [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! TIMES           [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! OR              [ reduce using rule 19 (expr -> expr EQUAL expr .) ]
  ! AND             [ reduce using rule 19 (expr -> expr EQUAL expr .) ]


state 63

    (20) expr -> expr NEQUAL expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 20 (expr -> expr NEQUAL expr .)
    DO              reduce using rule 20 (expr -> expr NEQUAL expr .)
    RPAREN          reduce using rule 20 (expr -> expr NEQUAL expr .)
    RBRACE          reduce using rule 20 (expr -> expr NEQUAL expr .)
    SEMICOLON       reduce using rule 20 (expr -> expr NEQUAL expr .)
    ELSE            reduce using rule 20 (expr -> expr NEQUAL expr .)
    TO              reduce using rule 20 (expr -> expr NEQUAL expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! NEQUAL          [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! LT              [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! GT              [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! LE              [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! GE              [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! PLUS            [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! MINUS           [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! TIMES           [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! OR              [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]
  ! AND             [ reduce using rule 20 (expr -> expr NEQUAL expr .) ]


state 64

    (21) expr -> expr LT expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 21 (expr -> expr LT expr .)
    DO              reduce using rule 21 (expr -> expr LT expr .)
    RPAREN          reduce using rule 21 (expr -> expr LT expr .)
    RBRACE          reduce using rule 21 (expr -> expr LT expr .)
    SEMICOLON       reduce using rule 21 (expr -> expr LT expr .)
    ELSE            reduce using rule 21 (expr -> expr LT expr .)
    TO              reduce using rule 21 (expr -> expr LT expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! NEQUAL          [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! LT              [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! GT              [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! LE              [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! GE              [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! PLUS            [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! MINUS           [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! TIMES           [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! DIVIDE          [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! OR              [ reduce using rule 21 (expr -> expr LT expr .) ]
  ! AND             [ reduce using rule 21 (expr -> expr LT expr .) ]


state 65

    (22) expr -> expr GT expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 22 (expr -> expr GT expr .)
    DO              reduce using rule 22 (expr -> expr GT expr .)
    RPAREN          reduce using rule 22 (expr -> expr GT expr .)
    RBRACE          reduce using rule 22 (expr -> expr GT expr .)
    SEMICOLON       reduce using rule 22 (expr -> expr GT expr .)
    ELSE            reduce using rule 22 (expr -> expr GT expr .)
    TO              reduce using rule 22 (expr -> expr GT expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! NEQUAL          [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! LT              [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! GT              [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! LE              [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! GE              [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! PLUS            [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! MINUS           [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! TIMES           [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! DIVIDE          [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! OR              [ reduce using rule 22 (expr -> expr GT expr .) ]
  ! AND             [ reduce using rule 22 (expr -> expr GT expr .) ]


state 66

    (23) expr -> expr LE expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 23 (expr -> expr LE expr .)
    DO              reduce using rule 23 (expr -> expr LE expr .)
    RPAREN          reduce using rule 23 (expr -> expr LE expr .)
    RBRACE          reduce using rule 23 (expr -> expr LE expr .)
    SEMICOLON       reduce using rule 23 (expr -> expr LE expr .)
    ELSE            reduce using rule 23 (expr -> expr LE expr .)
    TO              reduce using rule 23 (expr -> expr LE expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! NEQUAL          [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! LT              [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! GT              [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! LE              [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! GE              [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! PLUS            [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! MINUS           [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! TIMES           [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! DIVIDE          [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! OR              [ reduce using rule 23 (expr -> expr LE expr .) ]
  ! AND             [ reduce using rule 23 (expr -> expr LE expr .) ]


state 67

    (24) expr -> expr GE expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 24 (expr -> expr GE expr .)
    DO              reduce using rule 24 (expr -> expr GE expr .)
    RPAREN          reduce using rule 24 (expr -> expr GE expr .)
    RBRACE          reduce using rule 24 (expr -> expr GE expr .)
    SEMICOLON       reduce using rule 24 (expr -> expr GE expr .)
    ELSE            reduce using rule 24 (expr -> expr GE expr .)
    TO              reduce using rule 24 (expr -> expr GE expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! NEQUAL          [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! LT              [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! GT              [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! LE              [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! GE              [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! PLUS            [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! MINUS           [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! TIMES           [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! DIVIDE          [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! OR              [ reduce using rule 24 (expr -> expr GE expr .) ]
  ! AND             [ reduce using rule 24 (expr -> expr GE expr .) ]


state 68

    (25) expr -> expr PLUS expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 25 (expr -> expr PLUS expr .)
    DO              reduce using rule 25 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 25 (expr -> expr PLUS expr .)
    RBRACE          reduce using rule 25 (expr -> expr PLUS expr .)
    SEMICOLON       reduce using rule 25 (expr -> expr PLUS expr .)
    ELSE            reduce using rule 25 (expr -> expr PLUS expr .)
    TO              reduce using rule 25 (expr -> expr PLUS expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! NEQUAL          [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! LT              [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! GT              [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! LE              [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! GE              [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! PLUS            [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! MINUS           [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! TIMES           [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! OR              [ reduce using rule 25 (expr -> expr PLUS expr .) ]
  ! AND             [ reduce using rule 25 (expr -> expr PLUS expr .) ]


state 69

    (26) expr -> expr MINUS expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 26 (expr -> expr MINUS expr .)
    DO              reduce using rule 26 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 26 (expr -> expr MINUS expr .)
    RBRACE          reduce using rule 26 (expr -> expr MINUS expr .)
    SEMICOLON       reduce using rule 26 (expr -> expr MINUS expr .)
    ELSE            reduce using rule 26 (expr -> expr MINUS expr .)
    TO              reduce using rule 26 (expr -> expr MINUS expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! NEQUAL          [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! LT              [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! GT              [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! LE              [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! GE              [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! PLUS            [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! MINUS           [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! TIMES           [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! OR              [ reduce using rule 26 (expr -> expr MINUS expr .) ]
  ! AND             [ reduce using rule 26 (expr -> expr MINUS expr .) ]


state 70

    (27) expr -> expr TIMES expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 27 (expr -> expr TIMES expr .)
    DO              reduce using rule 27 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 27 (expr -> expr TIMES expr .)
    RBRACE          reduce using rule 27 (expr -> expr TIMES expr .)
    SEMICOLON       reduce using rule 27 (expr -> expr TIMES expr .)
    ELSE            reduce using rule 27 (expr -> expr TIMES expr .)
    TO              reduce using rule 27 (expr -> expr TIMES expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! NEQUAL          [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! LT              [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! GT              [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! LE              [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! GE              [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! PLUS            [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! MINUS           [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! TIMES           [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! DIVIDE          [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! OR              [ reduce using rule 27 (expr -> expr TIMES expr .) ]
  ! AND             [ reduce using rule 27 (expr -> expr TIMES expr .) ]


state 71

    (28) expr -> expr DIVIDE expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 28 (expr -> expr DIVIDE expr .)
    DO              reduce using rule 28 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 28 (expr -> expr DIVIDE expr .)
    RBRACE          reduce using rule 28 (expr -> expr DIVIDE expr .)
    SEMICOLON       reduce using rule 28 (expr -> expr DIVIDE expr .)
    ELSE            reduce using rule 28 (expr -> expr DIVIDE expr .)
    TO              reduce using rule 28 (expr -> expr DIVIDE expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! NEQUAL          [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! LT              [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! GT              [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! LE              [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! GE              [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! PLUS            [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! MINUS           [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! TIMES           [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! DIVIDE          [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! OR              [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]
  ! AND             [ reduce using rule 28 (expr -> expr DIVIDE expr .) ]


state 72

    (29) expr -> expr OR expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 29 (expr -> expr OR expr .)
    DO              reduce using rule 29 (expr -> expr OR expr .)
    RPAREN          reduce using rule 29 (expr -> expr OR expr .)
    RBRACE          reduce using rule 29 (expr -> expr OR expr .)
    SEMICOLON       reduce using rule 29 (expr -> expr OR expr .)
    ELSE            reduce using rule 29 (expr -> expr OR expr .)
    TO              reduce using rule 29 (expr -> expr OR expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! NEQUAL          [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! LT              [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! GT              [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! LE              [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! GE              [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! PLUS            [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! TIMES           [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! DIVIDE          [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! OR              [ reduce using rule 29 (expr -> expr OR expr .) ]
  ! AND             [ reduce using rule 29 (expr -> expr OR expr .) ]


state 73

    (30) expr -> expr AND expr .
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    THEN            reduce using rule 30 (expr -> expr AND expr .)
    DO              reduce using rule 30 (expr -> expr AND expr .)
    RPAREN          reduce using rule 30 (expr -> expr AND expr .)
    RBRACE          reduce using rule 30 (expr -> expr AND expr .)
    SEMICOLON       reduce using rule 30 (expr -> expr AND expr .)
    ELSE            reduce using rule 30 (expr -> expr AND expr .)
    TO              reduce using rule 30 (expr -> expr AND expr .)
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51

  ! EQUAL           [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! NEQUAL          [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! LT              [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! GT              [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! LE              [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! GE              [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! PLUS            [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! MINUS           [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! TIMES           [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! DIVIDE          [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! OR              [ reduce using rule 30 (expr -> expr AND expr .) ]
  ! AND             [ reduce using rule 30 (expr -> expr AND expr .) ]


state 74

    (32) expr -> LPAREN expr RPAREN .

    THEN            reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    EQUAL           reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    NEQUAL          reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    LT              reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    GT              reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    LE              reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    GE              reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    DO              reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    RBRACE          reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 32 (expr -> LPAREN expr RPAREN .)
    TO              reduce using rule 32 (expr -> LPAREN expr RPAREN .)


state 75

    (13) stmt -> WHILE expr DO stmt .

    RBRACE          reduce using rule 13 (stmt -> WHILE expr DO stmt .)
    SEMICOLON       reduce using rule 13 (stmt -> WHILE expr DO stmt .)
    ELSE            reduce using rule 13 (stmt -> WHILE expr DO stmt .)


state 76

    (14) stmt -> FOR IDENTIFIER ASSIGN expr . TO expr DO stmts
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

    TO              shift and go to state 81
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51


state 77

    (15) stmt -> READ LPAREN ids RPAREN .

    RBRACE          reduce using rule 15 (stmt -> READ LPAREN ids RPAREN .)
    SEMICOLON       reduce using rule 15 (stmt -> READ LPAREN ids RPAREN .)
    ELSE            reduce using rule 15 (stmt -> READ LPAREN ids RPAREN .)


state 78

    (16) stmt -> WRITELN LPAREN expr RPAREN .

    RBRACE          reduce using rule 16 (stmt -> WRITELN LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 16 (stmt -> WRITELN LPAREN expr RPAREN .)
    ELSE            reduce using rule 16 (stmt -> WRITELN LPAREN expr RPAREN .)


state 79

    (17) stmt -> WRITELN LPAREN ids RPAREN .

    RBRACE          reduce using rule 17 (stmt -> WRITELN LPAREN ids RPAREN .)
    SEMICOLON       reduce using rule 17 (stmt -> WRITELN LPAREN ids RPAREN .)
    ELSE            reduce using rule 17 (stmt -> WRITELN LPAREN ids RPAREN .)


state 80

    (12) stmt -> IF expr THEN stmt ELSE . stmt
    (12) stmt -> . IF expr THEN stmt ELSE stmt
    (13) stmt -> . WHILE expr DO stmt
    (14) stmt -> . FOR IDENTIFIER ASSIGN expr TO expr DO stmts
    (15) stmt -> . READ LPAREN ids RPAREN
    (16) stmt -> . WRITELN LPAREN expr RPAREN
    (17) stmt -> . WRITELN LPAREN ids RPAREN
    (18) stmt -> . IDENTIFIER ASSIGN expr

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    READ            shift and go to state 14
    WRITELN         shift and go to state 15
    IDENTIFIER      shift and go to state 13

    stmt                           shift and go to state 82

state 81

    (14) stmt -> FOR IDENTIFIER ASSIGN expr TO . expr DO stmts
    (19) expr -> . expr EQUAL expr
    (20) expr -> . expr NEQUAL expr
    (21) expr -> . expr LT expr
    (22) expr -> . expr GT expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr GE expr
    (25) expr -> . expr PLUS expr
    (26) expr -> . expr MINUS expr
    (27) expr -> . expr TIMES expr
    (28) expr -> . expr DIVIDE expr
    (29) expr -> . expr OR expr
    (30) expr -> . expr AND expr
    (31) expr -> . NOT expr
    (32) expr -> . LPAREN expr RPAREN
    (33) expr -> . IDENTIFIER
    (34) expr -> . NUMBER
    (35) expr -> . TRUE
    (36) expr -> . FALSE

    NOT             shift and go to state 22
    LPAREN          shift and go to state 23
    IDENTIFIER      shift and go to state 24
    NUMBER          shift and go to state 25
    TRUE            shift and go to state 26
    FALSE           shift and go to state 27

    expr                           shift and go to state 83

state 82

    (12) stmt -> IF expr THEN stmt ELSE stmt .

    RBRACE          reduce using rule 12 (stmt -> IF expr THEN stmt ELSE stmt .)
    SEMICOLON       reduce using rule 12 (stmt -> IF expr THEN stmt ELSE stmt .)
    ELSE            reduce using rule 12 (stmt -> IF expr THEN stmt ELSE stmt .)


state 83

    (14) stmt -> FOR IDENTIFIER ASSIGN expr TO expr . DO stmts
    (19) expr -> expr . EQUAL expr
    (20) expr -> expr . NEQUAL expr
    (21) expr -> expr . LT expr
    (22) expr -> expr . GT expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . GE expr
    (25) expr -> expr . PLUS expr
    (26) expr -> expr . MINUS expr
    (27) expr -> expr . TIMES expr
    (28) expr -> expr . DIVIDE expr
    (29) expr -> expr . OR expr
    (30) expr -> expr . AND expr

    DO              shift and go to state 84
    EQUAL           shift and go to state 40
    NEQUAL          shift and go to state 41
    LT              shift and go to state 42
    GT              shift and go to state 43
    LE              shift and go to state 44
    GE              shift and go to state 45
    PLUS            shift and go to state 46
    MINUS           shift and go to state 47
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    OR              shift and go to state 50
    AND             shift and go to state 51


state 84

    (14) stmt -> FOR IDENTIFIER ASSIGN expr TO expr DO . stmts
    (10) stmts -> . stmt
    (11) stmts -> . stmts SEMICOLON stmt
    (12) stmt -> . IF expr THEN stmt ELSE stmt
    (13) stmt -> . WHILE expr DO stmt
    (14) stmt -> . FOR IDENTIFIER ASSIGN expr TO expr DO stmts
    (15) stmt -> . READ LPAREN ids RPAREN
    (16) stmt -> . WRITELN LPAREN expr RPAREN
    (17) stmt -> . WRITELN LPAREN ids RPAREN
    (18) stmt -> . IDENTIFIER ASSIGN expr

    IF              shift and go to state 10
    WHILE           shift and go to state 11
    FOR             shift and go to state 12
    READ            shift and go to state 14
    WRITELN         shift and go to state 15
    IDENTIFIER      shift and go to state 13

    stmts                          shift and go to state 85
    stmt                           shift and go to state 9

state 85

    (14) stmt -> FOR IDENTIFIER ASSIGN expr TO expr DO stmts .
    (11) stmts -> stmts . SEMICOLON stmt

  ! shift/reduce conflict for SEMICOLON resolved as shift
    RBRACE          reduce using rule 14 (stmt -> FOR IDENTIFIER ASSIGN expr TO expr DO stmts .)
    ELSE            reduce using rule 14 (stmt -> FOR IDENTIFIER ASSIGN expr TO expr DO stmts .)
    SEMICOLON       shift and go to state 19

  ! SEMICOLON       [ reduce using rule 14 (stmt -> FOR IDENTIFIER ASSIGN expr TO expr DO stmts .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for LT in state 52 resolved as shift
WARNING: shift/reduce conflict for GT in state 52 resolved as shift
WARNING: shift/reduce conflict for LE in state 52 resolved as shift
WARNING: shift/reduce conflict for GE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 52 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for LT in state 62 resolved as shift
WARNING: shift/reduce conflict for GT in state 62 resolved as shift
WARNING: shift/reduce conflict for LE in state 62 resolved as shift
WARNING: shift/reduce conflict for GE in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for LT in state 63 resolved as shift
WARNING: shift/reduce conflict for GT in state 63 resolved as shift
WARNING: shift/reduce conflict for LE in state 63 resolved as shift
WARNING: shift/reduce conflict for GE in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for LT in state 64 resolved as shift
WARNING: shift/reduce conflict for GT in state 64 resolved as shift
WARNING: shift/reduce conflict for LE in state 64 resolved as shift
WARNING: shift/reduce conflict for GE in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for LT in state 65 resolved as shift
WARNING: shift/reduce conflict for GT in state 65 resolved as shift
WARNING: shift/reduce conflict for LE in state 65 resolved as shift
WARNING: shift/reduce conflict for GE in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for LT in state 66 resolved as shift
WARNING: shift/reduce conflict for GT in state 66 resolved as shift
WARNING: shift/reduce conflict for LE in state 66 resolved as shift
WARNING: shift/reduce conflict for GE in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for LT in state 67 resolved as shift
WARNING: shift/reduce conflict for GT in state 67 resolved as shift
WARNING: shift/reduce conflict for LE in state 67 resolved as shift
WARNING: shift/reduce conflict for GE in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for LT in state 68 resolved as shift
WARNING: shift/reduce conflict for GT in state 68 resolved as shift
WARNING: shift/reduce conflict for LE in state 68 resolved as shift
WARNING: shift/reduce conflict for GE in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for LT in state 69 resolved as shift
WARNING: shift/reduce conflict for GT in state 69 resolved as shift
WARNING: shift/reduce conflict for LE in state 69 resolved as shift
WARNING: shift/reduce conflict for GE in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for LT in state 70 resolved as shift
WARNING: shift/reduce conflict for GT in state 70 resolved as shift
WARNING: shift/reduce conflict for LE in state 70 resolved as shift
WARNING: shift/reduce conflict for GE in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for OR in state 70 resolved as shift
WARNING: shift/reduce conflict for AND in state 70 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for LT in state 71 resolved as shift
WARNING: shift/reduce conflict for GT in state 71 resolved as shift
WARNING: shift/reduce conflict for LE in state 71 resolved as shift
WARNING: shift/reduce conflict for GE in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 71 resolved as shift
WARNING: shift/reduce conflict for OR in state 71 resolved as shift
WARNING: shift/reduce conflict for AND in state 71 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for LT in state 72 resolved as shift
WARNING: shift/reduce conflict for GT in state 72 resolved as shift
WARNING: shift/reduce conflict for LE in state 72 resolved as shift
WARNING: shift/reduce conflict for GE in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for OR in state 72 resolved as shift
WARNING: shift/reduce conflict for AND in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for LT in state 73 resolved as shift
WARNING: shift/reduce conflict for GT in state 73 resolved as shift
WARNING: shift/reduce conflict for LE in state 73 resolved as shift
WARNING: shift/reduce conflict for GE in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for OR in state 73 resolved as shift
WARNING: shift/reduce conflict for AND in state 73 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 85 resolved as shift
WARNING: reduce/reduce conflict in state 60 resolved using rule (ids -> IDENTIFIER)
WARNING: rejected rule (expr -> IDENTIFIER) in state 60
