
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOLEAN COLON COMMA DIVIDE DO ELSE EQUAL FALSE FOR GE GT IDENTIFIER IF INT LBRACE LE LPAREN LT MINUS NEQUAL NOT NUMBER OR PLUS RBRACE READ REAL RPAREN SEMICOLON THEN TIMES TO TRUE WHILE WRITELNprogram : LBRACE decls stmts RBRACEdecls : decl\n             | decls SEMICOLON decldecl : ids COLON typeids : IDENTIFIER\n           | ids COMMA IDENTIFIERtype : INT\n            | REAL\n            | BOOLEANstmts : stmt\n             | stmts SEMICOLON stmtstmt : IF expr THEN stmt ELSE stmt\n            | WHILE expr DO stmt\n            | FOR IDENTIFIER ASSIGN expr TO expr DO stmts\n            | READ LPAREN ids RPAREN\n            | WRITELN LPAREN expr RPAREN\n            | WRITELN LPAREN ids RPAREN\n            | IDENTIFIER ASSIGN exprexpr : expr EQUAL expr\n            | expr NEQUAL expr\n            | expr LT expr\n            | expr GT expr\n            | expr LE expr\n            | expr GE expr\n            | expr PLUS expr\n            | expr MINUS expr\n            | expr TIMES expr\n            | expr DIVIDE expr\n            | expr OR expr\n            | expr AND expr\n            | NOT expr\n            | LPAREN expr RPAREN\n            | IDENTIFIER\n            | NUMBER\n            | TRUE\n            | FALSE'
    
_lr_action_items = {'LBRACE':([0,],[2,]),'$end':([1,18,],[0,-1,]),'IDENTIFIER':([2,3,4,8,10,11,12,17,19,20,22,23,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,80,81,84,],[6,13,-2,6,24,24,29,37,13,-3,24,24,24,6,60,-4,-7,-8,-9,13,24,24,24,24,24,24,24,24,24,24,24,24,13,24,13,24,13,]),'SEMICOLON':([3,4,7,9,20,24,25,26,27,33,34,35,36,38,52,56,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,85,],[8,-2,19,-10,-3,-33,-34,-35,-36,-4,-7,-8,-9,-11,-31,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-32,-13,-15,-16,-17,-12,19,]),'IF':([3,4,19,20,33,34,35,36,39,54,80,84,],[10,-2,10,-3,-4,-7,-8,-9,10,10,10,10,]),'WHILE':([3,4,19,20,33,34,35,36,39,54,80,84,],[11,-2,11,-3,-4,-7,-8,-9,11,11,11,11,]),'FOR':([3,4,19,20,33,34,35,36,39,54,80,84,],[12,-2,12,-3,-4,-7,-8,-9,12,12,12,12,]),'READ':([3,4,19,20,33,34,35,36,39,54,80,84,],[14,-2,14,-3,-4,-7,-8,-9,14,14,14,14,]),'WRITELN':([3,4,19,20,33,34,35,36,39,54,80,84,],[15,-2,15,-3,-4,-7,-8,-9,15,15,15,15,]),'COLON':([5,6,37,],[16,-5,-6,]),'COMMA':([5,6,37,57,59,60,],[17,-5,-6,17,17,-5,]),'RPAREN':([6,24,25,26,27,37,52,53,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,],[-5,-33,-34,-35,-36,-6,-31,74,77,78,79,-5,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-32,]),'RBRACE':([7,9,24,25,26,27,38,52,56,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,85,],[18,-10,-33,-34,-35,-36,-11,-31,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-32,-13,-15,-16,-17,-12,-14,]),'ELSE':([9,24,25,26,27,38,52,56,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,82,85,],[-10,-33,-34,-35,-36,-11,-31,-18,80,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-32,-13,-15,-16,-17,-12,-14,]),'NOT':([10,11,22,23,30,32,40,41,42,43,44,45,46,47,48,49,50,51,55,81,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'LPAREN':([10,11,14,15,22,23,30,32,40,41,42,43,44,45,46,47,48,49,50,51,55,81,],[23,23,31,32,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'NUMBER':([10,11,22,23,30,32,40,41,42,43,44,45,46,47,48,49,50,51,55,81,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'TRUE':([10,11,22,23,30,32,40,41,42,43,44,45,46,47,48,49,50,51,55,81,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FALSE':([10,11,22,23,30,32,40,41,42,43,44,45,46,47,48,49,50,51,55,81,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ASSIGN':([13,29,],[30,55,]),'INT':([16,],[34,]),'REAL':([16,],[35,]),'BOOLEAN':([16,],[36,]),'THEN':([21,24,25,26,27,52,62,63,64,65,66,67,68,69,70,71,72,73,74,],[39,-33,-34,-35,-36,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-32,]),'EQUAL':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[40,-33,-34,-35,-36,40,40,40,40,40,-33,40,40,40,40,40,40,40,40,40,40,40,40,-32,40,40,]),'NEQUAL':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[41,-33,-34,-35,-36,41,41,41,41,41,-33,41,41,41,41,41,41,41,41,41,41,41,41,-32,41,41,]),'LT':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[42,-33,-34,-35,-36,42,42,42,42,42,-33,42,42,42,42,42,42,42,42,42,42,42,42,-32,42,42,]),'GT':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[43,-33,-34,-35,-36,43,43,43,43,43,-33,43,43,43,43,43,43,43,43,43,43,43,43,-32,43,43,]),'LE':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[44,-33,-34,-35,-36,44,44,44,44,44,-33,44,44,44,44,44,44,44,44,44,44,44,44,-32,44,44,]),'GE':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[45,-33,-34,-35,-36,45,45,45,45,45,-33,45,45,45,45,45,45,45,45,45,45,45,45,-32,45,45,]),'PLUS':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[46,-33,-34,-35,-36,46,46,46,46,46,-33,46,46,46,46,46,46,46,46,46,46,46,46,-32,46,46,]),'MINUS':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[47,-33,-34,-35,-36,47,47,47,47,47,-33,47,47,47,47,47,47,47,47,47,47,47,47,-32,47,47,]),'TIMES':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[48,-33,-34,-35,-36,48,48,48,48,48,-33,48,48,48,48,48,48,48,48,48,48,48,48,-32,48,48,]),'DIVIDE':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[49,-33,-34,-35,-36,49,49,49,49,49,-33,49,49,49,49,49,49,49,49,49,49,49,49,-32,49,49,]),'OR':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[50,-33,-34,-35,-36,50,50,50,50,50,-33,50,50,50,50,50,50,50,50,50,50,50,50,-32,50,50,]),'AND':([21,24,25,26,27,28,52,53,56,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,76,83,],[51,-33,-34,-35,-36,51,51,51,51,51,-33,51,51,51,51,51,51,51,51,51,51,51,51,-32,51,51,]),'DO':([24,25,26,27,28,52,62,63,64,65,66,67,68,69,70,71,72,73,74,83,],[-33,-34,-35,-36,54,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-32,84,]),'TO':([24,25,26,27,52,62,63,64,65,66,67,68,69,70,71,72,73,74,76,],[-33,-34,-35,-36,-31,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-32,81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'decls':([2,],[3,]),'decl':([2,8,],[4,20,]),'ids':([2,8,31,32,],[5,5,57,59,]),'stmts':([3,84,],[7,85,]),'stmt':([3,19,39,54,80,84,],[9,38,61,75,82,9,]),'expr':([10,11,22,23,30,32,40,41,42,43,44,45,46,47,48,49,50,51,55,81,],[21,28,52,53,56,58,62,63,64,65,66,67,68,69,70,71,72,73,76,83,]),'type':([16,],[33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> LBRACE decls stmts RBRACE','program',4,'p_program','SA.py',75),
  ('decls -> decl','decls',1,'p_decls','SA.py',79),
  ('decls -> decls SEMICOLON decl','decls',3,'p_decls','SA.py',80),
  ('decl -> ids COLON type','decl',3,'p_decl','SA.py',87),
  ('ids -> IDENTIFIER','ids',1,'p_ids','SA.py',91),
  ('ids -> ids COMMA IDENTIFIER','ids',3,'p_ids','SA.py',92),
  ('type -> INT','type',1,'p_type','SA.py',99),
  ('type -> REAL','type',1,'p_type','SA.py',100),
  ('type -> BOOLEAN','type',1,'p_type','SA.py',101),
  ('stmts -> stmt','stmts',1,'p_stmts','SA.py',105),
  ('stmts -> stmts SEMICOLON stmt','stmts',3,'p_stmts','SA.py',106),
  ('stmt -> IF expr THEN stmt ELSE stmt','stmt',6,'p_stmt','SA.py',113),
  ('stmt -> WHILE expr DO stmt','stmt',4,'p_stmt','SA.py',114),
  ('stmt -> FOR IDENTIFIER ASSIGN expr TO expr DO stmts','stmt',8,'p_stmt','SA.py',115),
  ('stmt -> READ LPAREN ids RPAREN','stmt',4,'p_stmt','SA.py',116),
  ('stmt -> WRITELN LPAREN expr RPAREN','stmt',4,'p_stmt','SA.py',117),
  ('stmt -> WRITELN LPAREN ids RPAREN','stmt',4,'p_stmt','SA.py',118),
  ('stmt -> IDENTIFIER ASSIGN expr','stmt',3,'p_stmt','SA.py',119),
  ('expr -> expr EQUAL expr','expr',3,'p_expr','SA.py',135),
  ('expr -> expr NEQUAL expr','expr',3,'p_expr','SA.py',136),
  ('expr -> expr LT expr','expr',3,'p_expr','SA.py',137),
  ('expr -> expr GT expr','expr',3,'p_expr','SA.py',138),
  ('expr -> expr LE expr','expr',3,'p_expr','SA.py',139),
  ('expr -> expr GE expr','expr',3,'p_expr','SA.py',140),
  ('expr -> expr PLUS expr','expr',3,'p_expr','SA.py',141),
  ('expr -> expr MINUS expr','expr',3,'p_expr','SA.py',142),
  ('expr -> expr TIMES expr','expr',3,'p_expr','SA.py',143),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','SA.py',144),
  ('expr -> expr OR expr','expr',3,'p_expr','SA.py',145),
  ('expr -> expr AND expr','expr',3,'p_expr','SA.py',146),
  ('expr -> NOT expr','expr',2,'p_expr','SA.py',147),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','SA.py',148),
  ('expr -> IDENTIFIER','expr',1,'p_expr','SA.py',149),
  ('expr -> NUMBER','expr',1,'p_expr','SA.py',150),
  ('expr -> TRUE','expr',1,'p_expr','SA.py',151),
  ('expr -> FALSE','expr',1,'p_expr','SA.py',152),
]
